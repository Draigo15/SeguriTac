/**
 * Base de conocimiento especializada para seguridad ciudadana
 * Contiene respuestas estructuradas y procedimientos espec√≠ficos
 */

export interface SecurityFAQ {
  id: string;
  question: string;
  answer: string;
  category: SecurityCategory;
  keywords: string[];
  priority: 'high' | 'medium' | 'low';
  requiresImmediate?: boolean;
}

export interface SecurityProcedure {
  id: string;
  name: string;
  description: string;
  steps: string[];
  requiredInfo: string[];
  estimatedTime: string;
  category: SecurityCategory;
}

export interface EmergencyProtocol {
  id: string;
  type: string;
  immediateActions: string[];
  contactInfo: string;
  whenToUse: string[];
  severity: 'critical' | 'high' | 'medium';
}

export type SecurityCategory = 
  | 'robo' 
  | 'violencia' 
  | 'emergencia' 
  | 'accidente' 
  | 'vandalismo' 
  | 'drogas' 
  | 'ruido' 
  | 'trafico' 
  | 'general' 
  | 'proceso' 
  | 'seguridad';

/**
 * Base de conocimiento principal
 */
export class SecurityKnowledgeBase {
  private faqs: SecurityFAQ[] = [
    {
      id: 'robo-001',
      question: '¬øQu√© hacer si me est√°n robando?',
      answer: 'üö® EMERGENCIA: Si est√°s siendo robado AHORA, llama inmediatamente al 911. No resistas, entrega lo que pidan. Tu seguridad es lo m√°s importante. Despu√©s del incidente, reporta inmediatamente usando la app.',
      category: 'robo',
      keywords: ['robando', 'asaltando', 'amenazando', 'pistola', 'cuchillo', 'ahora'],
      priority: 'high',
      requiresImmediate: true
    },
    {
      id: 'robo-002',
      question: '¬øC√≥mo reportar un robo que ya pas√≥?',
      answer: 'Para reportar un robo: 1) Ve a "Crear Reporte" 2) Selecciona "Robo/Hurto" 3) Proporciona ubicaci√≥n exacta 4) Describe lo sucedido con detalles 5) Adjunta fotos si es seguro hacerlo. Las autoridades revisar√°n tu caso en 2-4 horas.',
      category: 'robo',
      keywords: ['robo', 'hurto', 'robaron', 'quitaron', 'reportar'],
      priority: 'high'
    },
    {
      id: 'violencia-001',
      question: '¬øQu√© hacer ante violencia dom√©stica?',
      answer: 'üÜò Violencia dom√©stica es EMERGENCIA. Llama al 911 inmediatamente. Si no puedes hablar, env√≠a mensaje de texto al 911. Busca refugio seguro. Contacta l√≠nea nacional: 01-800-108-4053. Tu seguridad es prioridad.',
      category: 'violencia',
      keywords: ['violencia dom√©stica', 'maltrato', 'golpes', 'pareja', 'esposo', 'esposa'],
      priority: 'high',
      requiresImmediate: true
    },
    {
      id: 'violencia-002',
      question: 'Veo una pelea en la calle',
      answer: 'Si presencias violencia: 1) NO intervengas directamente 2) Llama al 911 si hay armas o lesiones graves 3) Reporta en la app con ubicaci√≥n exacta 4) Si es seguro, toma fotos/video como evidencia 5) Mantente a distancia segura.',
      category: 'violencia',
      keywords: ['pelea', 'golpeando', 'peleando', 'agresi√≥n', 'violencia'],
      priority: 'high'
    },
    {
      id: 'drogas-001',
      question: '¬øC√≥mo reportar venta de drogas?',
      answer: 'Para reportar narc√≥ticos: 1) "Crear Reporte" > "Narc√≥ticos" 2) Ubicaci√≥n exacta (direcci√≥n, referencias) 3) Horarios de actividad 4) Descripci√≥n de personas 5) Tu identidad permanece AN√ìNIMA. No te acerques al lugar.',
      category: 'drogas',
      keywords: ['drogas', 'narc√≥ticos', 'vendiendo', 'marihuana', 'coca√≠na', 'dealer'],
      priority: 'medium'
    },
    {
      id: 'emergencia-001',
      question: '¬øCu√°ndo es una emergencia real?',
      answer: 'Es EMERGENCIA si: üö® Hay peligro inmediato de vida üö® Crimen en progreso üö® Accidente grave üö® Incendio üö® Persona inconsciente. LLAMA 911 INMEDIATAMENTE. Para otros casos, usa la app.',
      category: 'emergencia',
      keywords: ['emergencia', 'urgente', 'inmediato', 'peligro', 'vida', 'muerte'],
      priority: 'high',
      requiresImmediate: true
    },
    {
      id: 'proceso-001',
      question: '¬øCu√°nto tardan en responder?',
      answer: 'Tiempos de respuesta: üî¥ Emergencias: Inmediato (911) üü° Alta prioridad: 30min-2hrs üü¢ Prioridad normal: 2-4hrs üîµ Baja prioridad: 4-24hrs. Recibir√°s notificaciones de actualizaci√≥n.',
      category: 'proceso',
      keywords: ['tiempo', 'demora', 'cu√°nto', 'tardan', 'respuesta', 'cuando'],
      priority: 'medium'
    },
    {
      id: 'seguridad-001',
      question: 'Consejos para caminar seguro de noche',
      answer: 'üåô Seguridad nocturna: ‚úÖ Calles iluminadas ‚úÖ Camina con confianza ‚úÖ Evita distracciones (tel√©fono) ‚úÖ Comparte ubicaci√≥n con familia ‚úÖ Lleva silbato ‚úÖ Conf√≠a en tu instinto ‚úÖ Evita callejones oscuros.',
      category: 'seguridad',
      keywords: ['noche', 'caminar', 'seguro', 'consejos', 'prevenci√≥n', 'cuidarse'],
      priority: 'low'
    }
  ];

  private procedures: SecurityProcedure[] = [
    {
      id: 'proc-robo',
      name: 'Procedimiento para reportar robo',
      description: 'Pasos detallados para reportar un robo de manera efectiva',
      steps: [
        'Aseg√∫rate de estar en lugar seguro',
        'Abre la app y ve a "Crear Reporte"',
        'Selecciona "Robo/Hurto"',
        'Proporciona ubicaci√≥n exacta del incidente',
        'Describe qu√© fue robado y c√≥mo ocurri√≥',
        'Incluye descripci√≥n de los perpetradores',
        'Adjunta fotos si tienes evidencia',
        'Env√≠a el reporte y guarda el n√∫mero de referencia'
      ],
      requiredInfo: [
        'Ubicaci√≥n exacta',
        'Hora aproximada',
        'Descripci√≥n de lo robado',
        'Descripci√≥n de los perpetradores',
        'Direcci√≥n de escape (si la viste)'
      ],
      estimatedTime: '5-10 minutos',
      category: 'robo'
    },
    {
      id: 'proc-emergencia',
      name: 'Protocolo de emergencia',
      description: 'Qu√© hacer en situaciones de emergencia inmediata',
      steps: [
        'Eval√∫a si hay peligro inmediato',
        'Si hay peligro: llama 911 INMEDIATAMENTE',
        'Busca lugar seguro',
        'Proporciona ubicaci√≥n exacta al 911',
        'Sigue instrucciones del operador',
        'No cuelgues hasta que te lo indiquen',
        'Despu√©s, reporta en la app para seguimiento'
      ],
      requiredInfo: [
        'Ubicaci√≥n exacta',
        'Tipo de emergencia',
        'N√∫mero de personas involucradas',
        'Si necesitas ambulancia, polic√≠a o bomberos'
      ],
      estimatedTime: 'Inmediato',
      category: 'emergencia'
    }
  ];

  private emergencyProtocols: EmergencyProtocol[] = [
    {
      id: 'emergency-911',
      type: 'Emergencia inmediata',
      immediateActions: [
        'Llama 911 inmediatamente',
        'Proporciona ubicaci√≥n exacta',
        'Describe la situaci√≥n claramente',
        'Sigue las instrucciones del operador',
        'No cuelgues hasta que te lo indiquen'
      ],
      contactInfo: '911 - Emergencias',
      whenToUse: [
        'Crimen en progreso',
        'Peligro inmediato de vida',
        'Accidente grave',
        'Incendio',
        'Persona inconsciente'
      ],
      severity: 'critical'
    },
    {
      id: 'emergency-violence',
      type: 'Violencia dom√©stica',
      immediateActions: [
        'Busca lugar seguro inmediatamente',
        'Llama 911 o env√≠a SMS si no puedes hablar',
        'Contacta l√≠nea nacional: 01-800-108-4053',
        'Documenta lesiones con fotos',
        'Busca refugio en lugar seguro'
      ],
      contactInfo: '911 o 01-800-108-4053',
      whenToUse: [
        'Maltrato f√≠sico',
        'Amenazas de muerte',
        'Violencia psicol√≥gica severa',
        'Abuso sexual'
      ],
      severity: 'critical'
    }
  ];

  /**
   * Busca respuesta en la base de conocimiento
   */
  findResponse(message: string): SecurityFAQ | null {
    const lowerMessage = message.toLowerCase();
    
    // Buscar por palabras clave, priorizando emergencias
    const matches = this.faqs.filter(faq => 
      faq.keywords.some(keyword => lowerMessage.includes(keyword))
    );

    if (matches.length === 0) return null;

    // Priorizar emergencias
    const emergencyMatch = matches.find(faq => faq.requiresImmediate);
    if (emergencyMatch) return emergencyMatch;

    // Priorizar por importancia
    const highPriority = matches.filter(faq => faq.priority === 'high');
    if (highPriority.length > 0) {
      return highPriority[0];
    }

    return matches[0];
  }

  /**
   * Obtiene procedimiento por categor√≠a
   */
  getProcedure(category: SecurityCategory): SecurityProcedure | null {
    return this.procedures.find(proc => proc.category === category) || null;
  }

  /**
   * Obtiene protocolo de emergencia
   */
  getEmergencyProtocol(type: string): EmergencyProtocol | null {
    return this.emergencyProtocols.find(protocol => 
      protocol.type.toLowerCase().includes(type.toLowerCase())
    ) || null;
  }

  /**
   * Detecta si el mensaje indica emergencia
   */
  isEmergency(message: string): boolean {
    const emergencyKeywords = [
      'emergencia', 'urgente', 'ayuda', 'ahora', 'inmediato',
      'robando', 'asaltando', 'amenazando', 'pistola', 'cuchillo',
      'golpeando', 'lastimando', 'sangre', 'inconsciente',
      'fuego', 'incendio', 'accidente grave'
    ];

    const lowerMessage = message.toLowerCase();
    return emergencyKeywords.some(keyword => lowerMessage.includes(keyword));
  }

  /**
   * Clasifica el tipo de incidente
   */
  classifyIncident(message: string): SecurityCategory {
    const lowerMessage = message.toLowerCase();

    const categoryKeywords = {
      robo: ['robo', 'hurto', 'robaron', 'quitaron', 'asalto'],
      violencia: ['pelea', 'golpes', 'violencia', 'agresi√≥n', 'maltrato'],
      emergencia: ['emergencia', 'urgente', 'inmediato', 'peligro'],
      accidente: ['accidente', 'choque', 'atropello', 'lesionado'],
      vandalismo: ['vandalismo', 'grafiti', 'da√±os', 'destruyeron'],
      drogas: ['drogas', 'narc√≥ticos', 'vendiendo', 'marihuana'],
      ruido: ['ruido', 'm√∫sica', 'molesto', 'volumen'],
      trafico: ['tr√°fico', 'sem√°foro', 'estacionamiento', 'velocidad'],
      seguridad: ['consejos', 'prevenci√≥n', 'cuidarse', 'seguro']
    };

    for (const [category, keywords] of Object.entries(categoryKeywords)) {
      if (keywords.some(keyword => lowerMessage.includes(keyword))) {
        return category as SecurityCategory;
      }
    }

    return 'general';
  }

  /**
   * Obtiene todas las FAQs por categor√≠a
   */
  getFAQsByCategory(category: SecurityCategory): SecurityFAQ[] {
    return this.faqs.filter(faq => faq.category === category);
  }

  /**
   * Obtiene respuesta de emergencia r√°pida
   */
  getEmergencyResponse(): string {
    return 'üö® EMERGENCIA DETECTADA üö®\n\nSi est√°s en PELIGRO INMEDIATO:\n‚Ä¢ Llama 911 AHORA\n‚Ä¢ Busca lugar seguro\n‚Ä¢ No uses la app, usa el tel√©fono\n\nSi ya pas√≥ la emergencia:\n‚Ä¢ Reporta en la app con todos los detalles\n‚Ä¢ Las autoridades te contactar√°n pronto';
  }
}

// Instancia global de la base de conocimiento
export const securityKnowledgeBase = new SecurityKnowledgeBase();